// <auto-generated />
using System;
using FullstackCodingChallengeFinal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FullstackCodingChallengeFinal.Migrations
{
    [DbContext(typeof(CompanyContext))]
    partial class CompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.ClientsModel", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("ClientsModel");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.CompanyModel", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientsClientId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompetitorsCompetitorId")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.HasIndex("ClientsClientId");

                    b.HasIndex("CompetitorsCompetitorId");

                    b.ToTable("CompanyModel");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.CompetitorsModel", b =>
                {
                    b.Property<int>("CompetitorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompetitorId");

                    b.ToTable("CompetitorsModel");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.DepartmentModel", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("DepartmentModel");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.EmployeeDepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeDepartmentModel");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.EmployeeModel", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("PersonId");

                    b.ToTable("EmployeeModel");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.PersonModel", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SSN")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.ToTable("PersonModel");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.CompanyModel", b =>
                {
                    b.HasOne("FullstackCodingChallengeFinal.Models.ClientsModel", "Clients")
                        .WithMany("Company")
                        .HasForeignKey("ClientsClientId");

                    b.HasOne("FullstackCodingChallengeFinal.Models.CompetitorsModel", "Competitors")
                        .WithMany()
                        .HasForeignKey("CompetitorsCompetitorId");

                    b.Navigation("Clients");

                    b.Navigation("Competitors");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.EmployeeDepartmentModel", b =>
                {
                    b.HasOne("FullstackCodingChallengeFinal.Models.DepartmentModel", "Department")
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FullstackCodingChallengeFinal.Models.EmployeeModel", "Employee")
                        .WithMany("Department")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.EmployeeModel", b =>
                {
                    b.HasOne("FullstackCodingChallengeFinal.Models.PersonModel", "Person")
                        .WithMany("Employees")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.ClientsModel", b =>
                {
                    b.Navigation("Company");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.DepartmentModel", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.EmployeeModel", b =>
                {
                    b.Navigation("Department");
                });

            modelBuilder.Entity("FullstackCodingChallengeFinal.Models.PersonModel", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
